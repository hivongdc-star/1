// ‚úÖ T∆∞∆°ng th√≠ch Node.js 16+
const fetch = (...args) => import("node-fetch").then(({ default: fetch }) => fetch(...args));
const { EmbedBuilder } = require("discord.js");

// üí´ API key (ghi tr·ª±c ti·∫øp)
const GEMINI_API_KEY = "AIzaSyCacDkHISpdCEhSaErVztXr82YdMeA4EZQ";
const GEMINI_MODEL = "gemini-2.0-flash";

module.exports = {
  name: "call",
  aliases: ["tientinh", "tt", "talk"],
  description: "Tr√≤ chuy·ªán v·ªõi Ti·ªÖn T√¨nh ‚ú®",

  async run(client, msg, args) {
    if (!args.length) {
      return msg.reply("üå∏ H√£y n√≥i g√¨ ƒë√≥ v·ªõi **Ti·ªÖn T√¨nh**, v√≠ d·ª•: `-call H√¥m nay tr·ªùi ƒë·∫πp nh·ªâ?`");
    }

    const question = args.join(" ");

    try {
      const thinking = await msg.channel.send("üí≠ **Ti·ªÖn T√¨nh** ƒëang suy nghƒ©...");

      const res = await fetch(
        `https://generativelanguage.googleapis.com/v1beta/models/${GEMINI_MODEL}:generateContent`,
        {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            "X-goog-api-key": GEMINI_API_KEY,
          },
          body: JSON.stringify({
            contents: [{ parts: [{ text: question }] }],
          }),
        }
      );

      const data = await res.json();
      const answer =
        data?.candidates?.[0]?.content?.parts?.[0]?.text?.trim() ||
        "Ti·ªÖn T√¨nh kh·∫Ω c∆∞·ªùi nh∆∞ng kh√¥ng n√≥i g√¨...";

      // üå∑ Embed phong c√°ch nh·∫π nh√†ng
      const embed = new EmbedBuilder()
        .setColor(0xf5b7d1)
        .setAuthor({
          name: "Ti·ªÖn T√¨nh ‚ú®",
          iconURL: "https://cdn-icons-png.flaticon.com/512/4712/4712027.png",
        })
        .setDescription(`**üíå B·∫°n:** ${question}\n\n**üå∏ Ti·ªÖn T√¨nh:** ${answer}`)
        .setFooter({
          text: "M·ªôt l·ªùi t·ª´ Ti·ªÖn T√¨nh",
          iconURL: client.user.displayAvatarURL(),
        })
        .setTimestamp();

      await thinking.edit({ content: "", embeds: [embed] });
    } catch (err) {
      console.error("Ti·ªÖn T√¨nh error:", err);
      msg.reply("‚ö†Ô∏è Ti·ªÖn T√¨nh tho√°ng ng·∫©n ng∆°... h√£y th·ª≠ l·∫°i sau nh√©.");
    }
  },
};
